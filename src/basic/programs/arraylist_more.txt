/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.util.*;
import java.io.*;




/**
 *
 * @author sayan
 */
public class JavaApplication1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
 //creating list 1 of name       
        System.out.println("\n name list");
     String[] name = {"sayan","subho","madan"};
    LinkedList<String> list1 =  new LinkedList<String>();
    
    for(String x : name){
        list1.add(x);
        System.out.println(x);
    }
 
    
//creating list 2 of food    
    String[] food = {"rice" , "apple" , "grtaves" ,"banana" ,"fruit"};
    ArrayList<String> list2 = new ArrayList<String>();
    
        System.out.println("\n food list");
        for(String y : food){
        list2.add(y);
            System.out.println(y);
         
        }
        
       
//deleting some of list 2 items
   /*     System.out.println("\n new list after deletion ");
        int x= 3;
         list2.remove(x);
         
         System.out.println("deleted from position["+x+"] of the array");
         for(String z : list2){
            
            System.out.println(z);
         
         }
*/
         
//adding list 2 to list 1         
         
       list1.addAll(list2);
         
       printlist1(list1);
       
       remove(list1,1,3);
       
        reverselist1(list1);
    }

    
    //method printlist1
    private static void printlist1(LinkedList<String> list1) {
     
       System.out.println("\n after adding list 2 to list 1 ");
        for(String x : list1){
            System.out.println(x);
        }
    }

    
    //method remove
    private static void remove(LinkedList<String> list1, int from, int to) {
        System.out.println("\n list after deltion of elements from "+from+" to "+to);
        
        list1.subList(from, to).clear();
        for(String x : list1){
            System.out.println(x);
          }
        
        }

    
    //method reverselist1
    private static void reverselist1(LinkedList<String> list1) {
        System.out.println("\n list in reverse order");
        ListIterator<String> itr = list1.listIterator(list1.size());
        
        while(itr.hasPrevious())
            System.out.printf("%s \n",itr.previous());
       }
    
    
    
    
}

                                                                                  